---
const clientId = 'c18a31f3b47a4a7892e4e1ba0c33e1c8';
const clientSecret = 'f7eeeb33428349539412743b054ac8ed';

const getToken = () => {
    const authString = btoa(`${clientId}:${clientSecret}`); // Combine client ID and client secret
    const formData = new URLSearchParams();
    formData.append('grant_type', 'client_credentials');

    return fetch('https://accounts.spotify.com/api/token', {
        method: 'POST',
        headers: {
            'Authorization': `Basic ${authString}`,
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: 'grant_type=client_credentials'
    })
    .then(response => response.json())
    .then(data => {
        console.log(data.access_token)
        return data.access_token;
    })
    .catch(error => {
        console.error('Error:', error);
    });
};

const getPlayingSong = (accessToken: string) => {
    fetch('https://api.spotify.com/v1/me/player/queue', {
        method: 'GET',
        headers: {
            Authorization: `Bearer ${accessToken}`,
            client_id: 'c18a31f3b47a4a7892e4e1ba0c33e1c8',
            client_secret: 'f7eeeb33428349539412743b054ac8ed',
        }
    })
    .then(res => res.json())
    .then(data => {
        console.log(data);
    })
}
---
<h1>
    {getToken().then(accessToken => getPlayingSong(accessToken))}
</h1>

